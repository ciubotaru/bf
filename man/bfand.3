.TH bfand 3 "SEPTEMBER 1, 2015" "bitfield 0.1" "Bitfield manipulation library"
.SH NAME
bfand, bfnot, bfnot_ip, bfor, bfxor \- perform logical operations over bitmaps.
.SH SYNOPSIS
.nf
.B "#include <bitfield.h>
.sp
.BI "struct bitfield *bfand(const struct bitfield *"input1 ", const struct bitfield *"input2 ");
.BI "struct bitfield *bfor(const struct bitfield *"input1 ", const struct bitfield *"input2 ");
.BI "struct bitfield *bfnot(const struct bitfield *"input ");
.BI "void bfnot(const struct bitfield *"input ");
.BI "struct bitfield *bfxor(const struct bitfield *"input1 ", const struct bitfield *"input2 ");
.fi
.SH DESCRIPTION
A bitfield is represented by a "struct bitfield". It has two elements: an array of unsigned long integers \fIfield\fR and an integer \fIsize\fR.
.sp
The \fBbfand()\fR function takes pointers to two bitfields, \fIinput1\fR and \fIinput2\fR, performs logical AND over each pairs of bits from \fIinput1\fR and \fIinput2\fR and stores the result in a new bitfiel. The function returns a pointer to the new bitfield.
.sp
The following table illustrates inputs and results of logical AND:
.sp
.nf
input1 input2 output
--------------------
  0      0      0
  0      1      0
  1      0      0
  1      1      1
.fi
.sp
The \fBbfnot()\fR function takes pointer to a bitfield, \fIinput\fR, reverses all its bits and stores the result in a new bitfield. The function returns a pointer to the new bitfield. The following table illustrates input and result of logical NOT:
.sp
.nf
input output
------------
  0      1
  1      0
.fi
.sp
The \fBbfnot_ip()\fR function is an "in-place" version of the \fBbnot()\fR.
.sp
The \fBbfor()\fR function takes pointers to two bitfields, \fIinput1\fR and \fIinput2\fR, and performs bitwise inclusive OR over pairs of bits from \fIinput1\fR and \fIinput2\fR and stores the result in a new bitfield. The function returns a pointer to the new bitfield.
.sp
The following table illustrates inputs and results of logical inclusive OR:
.sp
.nf
input1 input2 output
--------------------
  0      0      0
  0      1      1
  1      0      1
  1      1      1
.fi
.sp
The \fBbfxor()\fR function takes pointers to two bitfields, \fIinput1\fR and \fIinput2\fR, and performs bitwise eXclusive OR (XOR) over pairs of bits from \fIinput1\fR and \fIinput2\fR and stores the result in a new bitfield. The function returns a pointer to the new bitfield.
.sp
The following table illustrates inputs and results of logical eXclusive OR (XOR):
.sp
.nf
input1 input2 output
--------------------
  0      0      0
  0      1      0
  1      0      1
  1      1      0
.fi
.sp
.SH "SEE ALSO"
.BR bfnew (3),
.BR bfdel (3),
.BR bfcmp (3),
.BR bfprint (3),
.BR char2bf (3),
.BR bf2char (3),
.BR bfsub (3),
.BR bfshift (3)
.SH AUTHOR
Vitalie CIUBOTARU

