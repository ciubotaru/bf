.TH bfshift 3 "JUNE 10, 2017" "bitfield 0.6.4" "Bitfield manipulation library"
.SH NAME
bfshift, bifshift_ip \- circular-shift the contents of a bitfield.
.SH SYNOPSIS
.nf
.B "#include <bitfield.h>
.sp
.BI "struct bitfield *bfshift(const struct bitfield *"input ", const unsigned int "offset ");
.BI "void *bfshift_ip(struct bitfield *"input ", const unsigned int "offset ");
.fi
.SH DESCRIPTION
A bitfield is represented by a "struct bitfield". It has two elements: an array of unsigned long integers \fIfield\fR and an unsigned integer \fIsize\fR.
.sp
The \fBbfshift()\fR function takes a pointer to bitfield \fIinput\fR and an integer \fIoffset\fR, and circular-shifts the bits by \fIoffset\fR positions from the origin. In other words, it "cuts" the array after \fIoffset\fR bits and swaps the parts. It \fIoffset\fR is negative, it is counted from the end. The function returns a pointer to the new bitfield.
.sp
The \fBbfshift_ip()\fR function does the same thing, but changes are made "in place", in the original bitfield.
.sp
.SH "SEE ALSO"
For the full list of bitfield functions and their descriptions, see manual page for
.BR bitfield (3).
.SH AUTHOR
Vitalie CIUBOTARU

